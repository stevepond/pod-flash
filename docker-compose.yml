services:
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - TEMPORAL_LOG_LEVEL=warn
    command: pnpm start
    develop:
      watch:
        - path: ./packages/api/src
          target: /app/packages/api/src
          action: sync
    depends_on:
      temporal:
        condition: service_started
      cassandra:
        condition: service_healthy
      minio:
        condition: service_started

  temporal:
    image: temporalio/auto-setup:1.22
    ports:
      - "7233:7233"
    environment:
      - SKIP_SCHEMA_SETUP=false
      - DB=cassandra
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_PORT=9042
      - CASSANDRA_USER=
      - CASSANDRA_PASSWORD=
      - CASSANDRA_KEYSPACE=temporal
      - CASSANDRA_REPLICATION_FACTOR=1
      - LOG_LEVEL=warn
    volumes:
      - ./temporal-logging.yaml:/etc/temporal/config/logging.yaml
    develop:
      watch:
        - path: ./temporal-logging.yaml
          target: /etc/temporal/config/logging.yaml
          action: sync
    depends_on:
      cassandra:
        condition: service_healthy

  cassandra:
    image: cassandra:4
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_LOG_LEVEL=WARN
    volumes:
      - ./cassandra-logback.xml:/etc/cassandra/logback.xml
    develop:
      watch:
        - path: ./cassandra-logback.xml
          target: /etc/cassandra/logback.xml
          action: sync
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra", "-e describe keyspaces"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  minio:
    image: minio/minio
    command: server /data --console-address :9001
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_LOG_LEVEL: warn
    ports:
      - "9000:9000"
      - "9001:9001" 